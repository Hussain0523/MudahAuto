spring.application.name=car-details
server.port=8081

# Zoho OAuth Configuration
zoho.oauth.url=/oauth/v2/token
zoho.oauth.grant-type.access=authorization_code
zoho.oauth.grant-type.refresh=refresh_token
zoho.oauth.code=1000.628bd0b038cba829731deb54f9deb631.e0165b8b0a738b93e8823fd4d168b521
zoho.oauth.client-id=1000.X9JAWONN022JJ3LMQET6T4BY2TBZQG
zoho.oauth.redirect-uri=https://www.google.com/
zoho.oauth.client-secret=b484f291c7b10d2d56227fbe0fa1dfc709e8a281f0
zoho.oauth.refreshToken=1000.0d609b76523e9a3b670b56c15b3fa7a6.d14454f618f6ef2f006bb35554b9d854

zoho.base.url=https://crm.zoho.com/crm
zoho.car.listings.url=v2.2/Inventories/bulk
zoho.car.details.url=v2.2/Inventories/

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/MudahAuto
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create

# R2DBC Database Configuration
spring.r2dbc.url=r2dbc:postgresql://localhost:5432/MudahAuto
spring.r2dbc.username=postgres
spring.r2dbc.password=postgres
spring.r2dbc.initialization-mode=always
spring.r2dbc.schema-locations=classpath:Schema.sql

# Mudah Configuration
mudah.dbconfig=create
